# -*- coding: utf-8 -*-


from __future__ import (absolute_import, division, print_function, unicode_literals)

from bothub_client.bot import BaseBot
from bothub_client.messages import Message
from bothub_client.decorators import command

def findmeal(yyyy,mm,dd):
  from urllib.request import urlopen
  from bs4 import BeautifulSoup
  url="https://www.hana.hs.kr/life/meal.asp?yy=%s&mm=%s&dd=%s"
  html=urlopen(url %(yyyy, mm, dd))
  bsObj=BeautifulSoup(html,"html.parser")
  li=bsObj.findAll("table",{"class":"today_meal"})
  str_li=str(li)
  split_li=str_li.split("<td>")[1:]
  meals=dict()
  m=["ÏïÑÏπ®","Ï†êÏã¨","Ï†ÄÎÖÅ","Í∞ÑÏãù"]
  for i in range(len(split_li)):
    b=split_li[i].split("</td>")[0]
    if b!='.':
      meals[m[i]]=b
  #print (meals)
  return meals

def todaymeal():
  from datetime import datetime
  from datetime import timedelta
  from pytz import timezone
  today=datetime.now(timezone('Asia/Seoul'))
  yy=str(today.year)
  mm=str(today.month)
  dd=str(today.day)
  a=findmeal(yy,mm,dd)
  return a

def gggs(grade):
  import requests
  from bs4 import BeautifulSoup as bs
  LOGIN_INFO={
    'login_id' : 'hanabot',
    'login_pw' : 'gkskqht2019*'
  }
  with requests.Session() as s:
    login_req = s.post('https://hi.hana.hs.kr/proc/login_proc.asp', data=LOGIN_INFO)
    gggs=s.get("https://hi.hana.hs.kr/SYSTEM_Plan/SubjectClassRoom/SCR_Condition/ConditionClassRommList.asp")
    gggs_soup=bs(gggs.text, 'html.parser')

    print(gggs_soup)

    li=gggs_soup.findAll("tr")
    res=[[],[],[]]

    for a in li:
      he=a.findAll("td")
      he=list(he)
      if (he[0].get_text().startswith('A'+grade)):
        room=str(he[0].get_text())
        time=int(str(he[3].get_text())[0])
        p1=(str(he[7].get_text())).strip()
        p3=p1.replace("√´","")
        try:
          people=int(p3)
        except:
          break
        i=0
        while(i<len(res[time-1])):
          if (room==res[time-1][i][0]):
            res[time-1][i][1]+=people
            break
          i+=1
        if (i==len(res[time-1])):
          res[time-1].append([room,people])

    return res

def dsg():

  import requests
  from bs4 import BeautifulSoup as bs
  LOGIN_INFO={
    'login_id' : 'hanabot',
    'login_pw' : 'gkskqht2019*'
  }
  with requests.Session() as s:
    login_req = s.post('https://hi.hana.hs.kr/proc/login_proc.asp', data=LOGIN_INFO)
    print(login_req.status_code)
    pre=s.get("https://hi.hana.hs.kr/SYSTEM_Plan/Lib_System/Lib_System_Reservation/reservation_001_Lib.asp")
    pre_soup=bs(pre.text, 'html.parser')
    li=pre_soup.findAll("input",{'name':'chk_time'})
    print(li)

    pages=[]

    for e in li:
      onclick=e['onclick']
      trim=onclick[10:-1].split(',')
      trim_=[trim[0][1:-1],int(trim[1])]

      pages.append(trim_)

    #print(pages)


    def empty_seat(code,t_code):

      DATA={
        'code':code,
        't_code':t_code
      }

      dsg=s.post(("https://hi.hana.hs.kr/SYSTEM_Plan/Lib_System/Lib_System_Reservation/reservation_%s_Lib.asp" %(code)),data=DATA)
      dsg_soup=bs(dsg.text, 'html.parser')
      span=dsg_soup.findAll("span",{'class':'seatbox'})
      print(len(span))
      return len(span)


    info=[]

    for e in pages:
      if (e[0]=='001'):
        venue='ÎèÑÏÑúÍ¥Ä'
      elif (e[0]=='002'):
        venue='ÌÜ†ÏùòÏã§'
      else:
        venue='error!'

      if (e[1] in [7,14,1,12]): 
        time=1
      elif (e[1] in [9,15,4,13]):
        time=2
      elif (e[1] in [10,16]):
        time=3
      elif (e[1] in [28,29]):
        time=0
      else:
        time=99

      try:
        e_seats=empty_seat(e[0],e[1])

      except:
        e_seats=-1

      info.append({'venue':venue,'time':time,'e_seats':e_seats})

    print(info) 
  return info


"""def dsg():

  import requests
  from bs4 import BeautifulSoup as bs
  LOGIN_INFO={
    'login_id' : 'hanabot',
    'login_pw' : 'gkskqht2019*'
  }
  with requests.Session() as s:
    login_req = s.post('https://hi.hana.hs.kr/proc/login_proc.asp', data=LOGIN_INFO)
    print(login_req.status_code)
    dsg=s.get("https://hi.hana.hs.kr/SYSTEM_Plan/Lib_System/Lib_System_Reservation/reservation_001_Lib.asp")
    dsg_soup=bs(dsg.text, 'html.parser')

    #print(dsg_soup)
    t_code

    Ïùº_Ï£ºÎßê1ÌÉÄÏûÑ: 7
    Ïùº_Ï£ºÎßê2ÌÉÄÏûÑ: 9
    Ïùº_Ï£ºÎßê3ÌÉÄÏûÑ: 10
    Ïùº_Ï£ºÎßê1ÌÉÄÏûÑ(ÌÜ†ÏùòÏã§): 14
    Ïùº_Ï£ºÎßê2ÌÉÄÏûÑ(ÌÜ†ÏùòÏã§): 15
    Ïùº_Ï£ºÎßê3ÌÉÄÏûÑ(ÌÜ†ÏùòÏã§): 16

    ÌèâÏùº_0ÌÉÄÏûÑ: 28
    ÌèâÏùº_0ÌÉÄÏûÑ(ÌÜ†ÏùòÏã§): 29
    ÌèâÏùº_1ÌÉÄÏûÑ: 1
    ÌèâÏùº_1ÌÉÄÏûÑ(ÌÜ†ÏùòÏã§): 12
    ÌèâÏùº_2ÌÉÄÏûÑ: 4
    ÌèâÏùº_2ÌÉÄÏûÑ(ÌÜ†ÏùòÏã§): 13

    code: ÎèÑÏÑúÍ¥Ä 001, ÌÜ†ÏùòÏã§ 002



    li=dsg_soup.findAll("tr")"""



class Bot(BaseBot):
  #Ï¥àÍ∏∞ Î©îÏãúÏßÄ

  def handle_message(self, event, context):
    message=event.get('content')

    if (("ÏïàÎÖï" in message or "Ìó¨Î°ú" in message or "hello" in message or "ÌïòÏù¥" in message) and "#" not in message and "*" not in message and "@" not in message):
      m=Message(event).set_text('ÏïàÎÖïÌïòÏÑ∏Ïöî, ÌïòÎÇòÎ¥áÏûÖÎãàÎã§! Î¨¥ÏóáÏùÑ ÎèÑÏôÄÎìúÎ¶¥ÍπåÏöî?')\
      .add_quick_reply('Í∏âÏãù')\
      .add_quick_reply('ÍµêÍ≥ºÍµêÏã§')\
      .add_quick_reply('ÎèÑÏÑúÍ¥Ä')\
      .add_quick_reply('ÌÉùÎ∞∞')\
      .add_quick_reply('ÌîºÎìúÎ∞±')
      self.send_message(m)
      

    elif (message==('/start') or message=='Ï≤òÏùåÏúºÎ°ú'):
      m=Message(event).set_text('Î¨¥ÏóáÏùÑ ÎèÑÏôÄÎìúÎ¶¥ÍπåÏöî?')\
      .add_quick_reply('Í∏âÏãù')\
      .add_quick_reply('ÍµêÍ≥ºÍµêÏã§')\
      .add_quick_reply('ÎèÑÏÑúÍ¥Ä')\
      .add_quick_reply('ÌÉùÎ∞∞')\
      .add_quick_reply('ÌîºÎìúÎ∞±')
      self.send_message(m)
      


    elif (message=="Í∏âÏãù"):
      m=Message(event).set_text("Í∏âÏãù Í¥ÄÎ†®Ìï¥ÏÑú Î¨¥ÏóáÏùÑ Ìï†ÍπåÏöî?„Öé„Öé")\
      .add_quick_reply("Ïò§Îäò Î©îÎâ¥")\
      .add_quick_reply("Ï¢ãÏïÑÌïòÎäî Î©îÎâ¥")\
      .add_quick_reply("Ï≤òÏùåÏúºÎ°ú")
      self.send_message(m)
      


    elif (message=='Ïò§Îäò Î©îÎâ¥'):
      self.send_message("Ïû†ÏãúÎßå Í∏∞Îã§Î†§Ï£ºÏÑ∏Ïöî!!!")
      menu_dict=todaymeal()
      if menu_dict==dict():
        m=Message(event).set_text("Ïïó, Ïò§ÎäòÏùÄ Ï§ÄÎπÑÎêú ÏãùÎã®Ïù¥ ÏóÜÎäî Í≤É Í∞ôÏïÑÏöî!")\
        .add_quick_reply("Ï≤òÏùåÏúºÎ°ú")
        self.send_message(m)
        

      else:
        li=['üç≥ÏïÑÏπ®ü•ê','ü•òÏ†êÏã¨ü•ó','üçùÏ†ÄÎÖÅüçï','ü•®Í∞ÑÏãùüåØ']
        for a in li:
          if (a[1:3] in list(menu_dict.keys())):
            self.send_message("%s\n%s" %(a,menu_dict[a[1:3]]))
        m=Message(event).set_text("Ïù¥ÏÉÅÏûÖÎãàÎã§!")\
        .add_quick_reply('Ï≤òÏùåÏúºÎ°ú')
        self.send_message(m)
        


    elif (message=='Ï¢ãÏïÑÌïòÎäî Î©îÎâ¥'):
      a=Message(event).set_text("Ï¢ãÏïÑÌïòÎäî Î©îÎâ¥ Í¥ÄÎ†®Ìï¥ÏÑú Î≠ò Ìï†ÏßÄ ÏÑ†ÌÉùÌï¥Ï£ºÏÑ∏Ïöî „Öé„Öé")\
      .add_quick_reply("Ïñ∏Ï†ú ÎÇòÏôÄ?")\
      .add_quick_reply("Î©îÎâ¥ Í¥ÄÎ¶¨")\
      .add_quick_reply("Ï≤òÏùåÏúºÎ°ú")
      self.send_message(a)
      


    elif (message=='Î©îÎâ¥ Í¥ÄÎ¶¨'):
      a=Message(event).set_text("Ï¢ãÏïÑÌïòÎäî Î©îÎâ¥ Î¶¨Ïä§Ìä∏Î•º ÏàòÏ†ï ÎòêÎäî ÌôïÏù∏ÌïòÏãúÍ≤†Ïñ¥Ïöî?")\
      .add_quick_reply("Ï∂îÍ∞Ä")\
      .add_quick_reply("ÌôïÏù∏")\
      .add_quick_reply("ÏÇ≠Ï†ú")\
      .add_quick_reply("Ï≤òÏùåÏúºÎ°ú")
      self.send_message(a)
      


    elif (message=='Ïñ∏Ï†ú ÎÇòÏôÄ?'):
      data=self.get_user_data()
      data.setdefault('menu',list())
      if (data['menu']==[]):
        self.send_message("Ïïó...Í∑∏Îü∞Îç∞ ÏïÑÏßÅ Ïñ¥Îñ§ Î©îÎâ¥Î•º Ï¢ãÏïÑÌïòÎäîÏßÄ Ïïà ÏïåÎ†§Ï£ºÏÖ®Ïñ¥Ïöî„Ö†„Ö†")
        m=Message(event).set_text("ÏßÄÍ∏à ÏïåÎ†§Ï£ºÏã§ÎûòÏöî?")\
        .add_quick_reply("Ï∂îÍ∞Ä")\
        .add_quick_reply("Ï≤òÏùåÏúºÎ°ú")
        self.send_message(m)
        


      else:
        self.send_message("ÏïûÏúºÎ°ú ÏùºÏ£ºÏùºÍ∞Ñ Ï¢ãÏïÑÌïòÎäî Î©îÎâ¥Í∞Ä Ïñ∏Ï†ú ÎÇòÏò§ÎäîÏßÄ ÏïåÎ†§ ÎìúÎ¶¥ÌÖåÎãà, Ï°∞Í∏àÎßå Í∏∞Îã§Î†§Ï£ºÏÑ∏Ïöî!!")
        from datetime import date
        from datetime import timedelta
        day=date.today()
        weekdays=['Ïõî','Ìôî','Ïàò','Î™©','Í∏à','ÌÜ†','Ïùº']
        count=0
        for i in range(7):
          meals=findmeal(str(day.year),str(day.month),str(day.day))
          if (meals==dict()):
            continue
          M=['ÏïÑÏπ®','Ï†êÏã¨','Ï†ÄÎÖÅ','Í∞ÑÏãù']
          for meal in M:
            if (meal in meals.keys()):
              l=meals[meal].split(',')
            for menu in l:
              for favs in data['menu']:
                if favs in menu:
                  self.send_message("%sÏùº %sÏöîÏùº %sÏóê %s" %(str(day.day),str(weekdays[day.weekday()]),meal,menu))
                  count+=1
                  break
          day+=timedelta(days=1)
        if (count!=0):
          m=Message(event).set_text(".....ÌùêÏùå, Ïù¥Ï†ú Îçî ÏóÜÎäî Í≤É Í∞ôÏïÑÏöî!")\
          .add_quick_reply("Ï≤òÏùåÏúºÎ°ú")
          self.send_message(m)
          

        else:
          m=Message(event).set_text("Ïñ¥Îñ°ÌïòÏ£†... ÏïûÏúºÎ°ú ÏùºÏ£ºÏùºÎèôÏïàÏùÄ Ï¢ãÏïÑÌïòÏãúÎäî Î©îÎâ¥Í∞Ä Ïïà ÎÇòÏò¨ Í≤É Í∞ôÏïÑÏöî...")\
          .add_quick_reply("Ï≤òÏùåÏúºÎ°ú")
          self.send_message(m)
          




    elif (message=='Ï∂îÍ∞Ä'):
      self.send_message("# Îí§Ïóê Ï¢ãÏïÑÌïòÎäî Î©îÎâ¥Î™ÖÏùÑ ÏâºÌëúÎ°ú Ïó∞Í≤∞Ìï¥ÏÑú ÏûÖÎ†•Ìï¥Ï£ºÏÑ∏Ïöî!")
      self.send_message("Î©îÎâ¥Î™ÖÏùò ÏùºÎ∂ÄÎßå ÏûÖÎ†•Ìï¥ÎèÑ Îê©ÎãàÎã§.\nÏòàÎ•º Îì§Ïñ¥, ÏªµÎ∞• Ï¢ÖÎ•òÎ•º Ï†ÑÎ∂Ä Ï¢ãÏïÑÌïòÏã†Îã§Î©¥ 'ÏªµÎ∞•'Îßå ÏûÖÎ†•Ìï¥ÎèÑ ÎèºÏöî.")
      self.send_message("ÏïÑÎûòÎäî ÏûÖÎ†• ÏòàÏãúÏûÖÎãàÎã§.")
      self.send_message("#Îî∏Í∏∞,ÏªµÎ∞•,Î≥∂ÏùåÍπÄÏπò,Ïß¨ÎΩï")
      


    elif (message=='ÌôïÏù∏'):
      data=self.get_user_data()
      data.setdefault('menu',list())
      if (data['menu']==[]):
        self.send_message("Ï†ÄÌïúÌÖå Ï¢ãÏïÑÌïòÎäî Î©îÎâ¥Î•º ÏïåÎ†§Ï£ºÏã† Ï†ÅÏù¥ ÏóÜÏñ¥Ïöî „Ö†„Ö†")
        m=Message(event).set_text("ÏßÄÍ∏à ÏïåÎ†§Ï£ºÏã§ÎûòÏöî?")\
        .add_quick_reply("Ï∂îÍ∞Ä")\
        .add_quick_reply("Ï≤òÏùåÏúºÎ°ú")
        self.send_message(m)
        

      else:
        self.send_message("ÏßÄÍ∏àÍπåÏßÄ ÏïåÎ†§Ï£ºÏã† Î©îÎâ¥Îì§Ïù¥ÏóêÏöî „Öé„Öé")
        li=str(data['menu'])
        m=Message(event).set_text(li[1:-1])\
        .add_quick_reply("Ï≤òÏùåÏúºÎ°ú")\
        .add_quick_reply("Ï∂îÍ∞Ä")\
        .add_quick_reply("ÏÇ≠Ï†ú")
        self.send_message(m)
        



    elif (message=='ÏÇ≠Ï†ú'):
      data=self.get_user_data()
      data.setdefault('menu',list())
      if (data['menu']==[]):
        m=Message(event).set_text("ÏïÑÏßÅ ÏïÑÎ¨¥Í≤ÉÎèÑ Îì±Î°ùÌïòÏßÄ ÏïäÏúºÏÖ®Ïñ¥Ïöî! „Öé„Öé")\
        .add_quick_reply("Ï≤òÏùåÏúºÎ°ú")
        self.send_message(m)
        

      else:
        self.send_message("ÏßÄÍ∏àÍπåÏßÄ ÏïåÎ†§Ï£ºÏã† Î©îÎâ¥Îì§Ïù¥ÏóêÏöî.")
        li=str(data['menu'])
        self.send_message(li[1:-1])
        self.send_message("* Í∏∞Ìò∏ Îí§Ïóê ÏÇ≠Ï†úÌï† Î©îÎâ¥Î™ÖÏùÑ ÏâºÌëúÎ°ú Ïó∞Í≤∞Ìï¥ÏÑú ÏûÖÎ†•Ìï¥Ï£ºÏÑ∏Ïöî!")
        self.send_message("ÏïÑÎûòÎäî ÏûÖÎ†• ÏòàÏãúÏûÖÎãàÎã§.")
        self.send_message("*Îî∏Í∏∞,ÏªµÎ∞•,Î≥∂ÏùåÍπÄÏπò,Ïß¨ÎΩï")
        


    elif (message.startswith('#')):
      ans_li=message[1:].split(',')
      for i in range(len(ans_li)):
        ans_li[i].strip()
      data=self.get_user_data()
      data.setdefault('menu',list())
      for a in ans_li:
        if (a not in data['menu']):
          data['menu'].append(a)
      self.set_user_data(data)
      self.send_message("ÎÑ§, ÏïåÍ≤†ÏäµÎãàÎã§! ÏßÄÍ∏àÍπåÏßÄ Îì±Î°ùÌïòÏã† Î©îÎâ¥Îì§ ÌôïÏù∏Ìï¥ Î≥¥ÏÑ∏Ïöî „Öé„Öé")
      li=str(data['menu'])
      m=Message(event).set_text(li[1:-1])\
      .add_quick_reply("ÏÇ≠Ï†ú")\
      .add_quick_reply("Ï≤òÏùåÏúºÎ°ú")\
      .add_quick_reply('Ïñ∏Ï†ú ÎÇòÏôÄ?')
      self.send_message(m)

    elif (message.startswith('*')):
      ans_li=message[1:].split(',')
      for i in range(len(ans_li)):
        ans_li[i].strip()
      data=self.get_user_data()
      data.setdefault('menu',list())
      for a in ans_li:
        if (a in data['menu']):
          data['menu'].remove(a)
      self.set_user_data(data)
      self.send_message("ÎÑ§, ÏïåÍ≤†ÏäµÎãàÎã§!")
      if (data["menu"]!=[]):
        self.send_message("ÏßÄÍ∏àÍπåÏßÄ Îì±Î°ùÌïòÏã† Î©îÎâ¥Îì§ ÌôïÏù∏Ìï¥ Î≥¥ÏÑ∏Ïöî „Öé„Öé")
        li=str(data['menu'])
        m=Message(event).set_text(li[1:-1])\
        .add_quick_reply("Ï∂îÍ∞Ä")\
        .add_quick_reply("ÏÇ≠Ï†ú")\
        .add_quick_reply("Ï≤òÏùåÏúºÎ°ú")
        self.send_message(m)
        

      else:
        m=Message(event).set_text("Ïù¥Ï†ú Îì±Î°ùÎêú Î©îÎâ¥Í∞Ä ÏóÜÎÑ§Ïöî „Öé„Öé")\
        .add_quick_reply("Ï∂îÍ∞Ä")\
        .add_quick_reply("Ï≤òÏùåÏúºÎ°ú")
        self.send_message(m)
        


    elif(message=="ÍµêÍ≥ºÍµêÏã§"):

      m=Message(event).set_text("Î™á ÌïôÎÖÑÏù¥Ïã†ÏßÄ ÏïåÎ†§ Ï£ºÏÑ∏Ïöî!")\
      .add_quick_reply("1ÌïôÎÖÑ")\
      .add_quick_reply("2ÌïôÎÖÑ")\
      .add_quick_reply("3ÌïôÎÖÑ")
      self.send_message(m)
      


    elif (message.endswith("ÌïôÎÖÑ") and len(message)==3):
      self.send_message("%sÏ∏µÏùò ÍµêÍ≥ºÍµêÏã§ Ïã†Ï≤≠Ïûê ÏàòÎ•º ÏÑ∏Í≥† ÏûàÏäµÎãàÎã§. Î™á Ï¥àÎßå Í∏∞Îã§Î†§ Ï£ºÏÑ∏Ïöî!" %(message))
      li=gggs(message[0])
      response=["","",""]
      cnt=0
      for i in range(len(li)):
        if (li[i]):
          response[i]+=str(i+1)+"ÌÉÄÏûÑ\n"
          for j in range(len(li[i])):
            response[i]+=li[i][j][0]+"Ìò∏: "+str(li[i][j][1])+"Î™Ö"
            if (j==len(li[i])-1):
              break
            response[i]+="\n"
          self.send_message(response[i])
          cnt+=1

      if (cnt==0):
        m=Message(event).set_text("ÌùêÏùå, Ïò§ÎäòÏùÄ ÏïÑÏßÅ ÏïÑÎ¨¥ÎèÑ ÍµêÍ≥ºÍµêÏã§ÏùÑ Ïã†Ï≤≠ÌïòÏßÄ ÏïäÏùÄ Í≤É Í∞ôÎÑ§Ïöî!")\
        .add_quick_reply("Ï≤òÏùåÏúºÎ°ú")
        self.send_message(m)
        


      else:
        m=Message(event).set_text("Ïù¥ÏÉÅÏûÖÎãàÎã§ „Öé„Öé")\
        .add_quick_reply("Ï≤òÏùåÏúºÎ°ú")
        self.send_message(m)

    elif (message=='ÎèÑÏÑúÍ¥Ä'):
      self.send_message("ÌÉÄÏûÑ Î≥Ñ ÎèÑÏÑúÍ¥Ä ÏûîÏó¨ Ï¢åÏÑù ÏàòÎ•º ÏÑ∏Í≥† ÏûàÏäµÎãàÎã§. Ïû†ÏãúÎßå Í∏∞Îã§Î†§Ï£ºÏÑ∏Ïöî!")
      info=dsg()
      msg=[]
      for i in info:
        txt=("%dÌÉÄÏûÑ %s: %d" %(i['time'],i['venue'],i['e_seats']))
        msg.append(txt)
      send=('\n').join(msg)
      m=Message(event).set_text(send)\
      .add_quick_reply('Ï≤òÏùåÏúºÎ°ú')
      self.send_message(m)



        ################################################################################################################################




    elif (message=='Ïò§Îäò'): 
      data=self.get_user_data()
      data.setdefault('yourname','blank')

      if (data['yourname']=='blank'):
        self.send_message("ÌÉùÎ∞∞ ÌôïÏù∏ Í∏∞Îä•ÏùÑ Ïù¥Ïö©ÌïòÎ†§Î©¥ Î®ºÏ†Ä Ï†úÍ≤å Ïù¥Î¶ÑÏùÑ ÏïåÎ†§Ï£ºÏÖîÏïº Ìï¥Ïöî! Ï≤òÏùåÏóêÎßå Ìïú Î≤à ÏûÖÎ†•ÌïòÎ©¥ Ï†ÄÏû•ÎêòÎãà, Îß§Î≤à ÏÉàÎ°ú ÏïåÎ†§Ï£ºÏã§ ÌïÑÏöîÎäî ÏóÜÎãµÎãàÎã§.")
        self.send_message("Î¨ºÎ°†, ÏõêÌïòÏãúÎ©¥ Ïñ∏Ï†úÎì† Ï†ïÎ≥¥Î•º ÏÇ≠Ï†úÌï† Ïàò ÏûàÏñ¥Ïöî! ('ÌÉùÎ∞∞'->'Ïù¥Î¶Ñ Í¥ÄÎ¶¨'->'Ïù¥Î¶Ñ ÏÇ≠Ï†ú'Î•º Ï∞®Î°ÄÎ°ú ÎàåÎü¨ Ï£ºÏãúÎ©¥ ÎèºÏöî „Öé„Öé)")
        self.send_message("Í∏∞Ìò∏ '@' Îí§Ïóê Ïù¥Î¶ÑÏùÑ Ï†ÅÏñ¥ Ï£ºÏãúÍ≤†Ïñ¥Ïöî? ÏïÑÎûòÎäî ÏûÖÎ†• ÏòàÏãúÏûÖÎãàÎã§.")
        self.send_message("@ÌïòÎÇòÎ¥á")


      else:

        your_name=data['yourname']

        import requests
        from bs4 import BeautifulSoup as bs
        from datetime import datetime

        with requests.Session() as s:
          LOGIN_INFO = {
              'login_id': 'hanabot',
              'login_pw': 'gkskqht2019*'
          }

          login_req = s.post('https://hi.hana.hs.kr/proc/login_proc.asp', data=LOGIN_INFO)

          #[ÎÇ†ÏßúÏóê Ìï¥ÎãπÌïòÎäî Í≤åÏãúÎ¨º Ï∞æÍ∏∞]
          moklok_one=s.get('https://hi.hana.hs.kr/SYSTEM_Community/Board/sunrisePost_board/sunrisePost.asp')
          soup=bs(moklok_one.text, "html.parser") #Ïö∞Ìé∏Î¨º Í≤åÏãúÌåê Í∏ÅÏñ¥Ïò§Í∏∞
          geul_a = soup.find_all("a")
          list_a = []
          for b in range(len(geul_a)):
            text_a = geul_a[b]###############################################################################
            list_a.append(text_a)
          list2_a = list_a[23:-15]   #ÎÇ†Ïßú Ï†ÅÌòÄÏûàÎäî Ï†úÎ™©Îì§Îßå Îã§ Îî∞Ïò¥!! (Ï†úÏùº ÌïµÏã¨ 1)

          #print(list2_a)#############################################

          #[Ïù¥Ï†ú Í∑∏ ÎÇ†ÏßúÏóê ÎßûÎäî ÎßÅÌÅ¨Î•º Ï∞æÏïÑÎ≥¥Ïûê]
          link_li=[]
          for a in soup.find_all('a', href=True):
            link=a['href']
            link_li.append(link)
          link2=link_li[23:-15]      #Í∞Å Ï†úÎ™©Ïóê Ï†ÅÌòÄÏûàÎäî ÎßÅÌÅ¨Î•º Îã§ Îî∞Ïò¥ (Ï†úÏùº ÌïµÏã¨ 2)
          #print(link2)

          #[Ï¥àÍ∏∞ ÏÑ§Ï†ï]
          tooold=1  #1Ïù¥Î©¥ ÌéòÏù¥ÏßÄ ÎÑòÏñ¥Í∞ÄÏÑú or ÏïÑÏßÅ ÏóÖÎéÉ ÏïàÎèºÏÑú Î™ªÏ∞æÏùå / 0 ÎêòÎ©¥ Ï∞æÏùÑ Ïàò ÏûàÏñ¥!
          mimi=0   #ÎØ∏ÏàòÎ†πÏûê Í≤åÏãúÍ∏ÄÎèÑ ÏûàÎã§Î©¥ Ìè¨Ìï®ÏãúÏºúÏïºÌï®

          #[Ïò§Îäò ÎÇ†ÏßúÎ•º ÏûÖÎ†•Î∞õÏïÑÎ≥¥Ïûê]



          from pytz import timezone
          date_today=datetime.now(timezone('Asia/Seoul')).date() #Ïù¥Í±∞ pytz Ìï¥ÏïºÌï†ÎìØ!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!1
          mm=str(date_today.month)
          dd=str(date_today.day)
          nalza_today=('%sÏõî¬†%sÏùº' %(mm,dd))
          print (nalza_today)
          print(type(list2_a[0].text))
          for a in range(len(list2_a)):
            print(list2_a[a].text)
            if (nalza_today in list2_a[a].text):
              tooold=0
              if ('ÎØ∏' in list2_a[a]):
                mimi=1
                link_oneulmi=link2[a]
              link_oneul=link2[a]
              break

          if (tooold==1):
            m=Message(event).set_text("ÏïÑÏßÅ ÌÉùÎ∞∞ ÏàòÎ†πÏûê Î™©Î°ùÏù¥ ÏóÖÎç∞Ïù¥Ìä∏ÎêòÏßÄ ÏïäÏïòÏäµÎãàÎã§.\nÏ°∞Í∏àÎßå Í∏∞Îã§Î†§Ï£ºÏÑ∏Ïöî!\n(Ï£ºÎ°ú ÎãπÏùº ÌÉùÎ∞∞Îäî Ïò§ÌõÑ 4~5ÏãúÏØ§ ÏóÖÎç∞Ïù¥Ìä∏)")\
            .add_quick_reply("Ï≤òÏùåÏúºÎ°ú")
            self.send_message(m)

          else:
            #[Ïò§Îäò ÎÇ†Ïßú Í≤åÏãúÍ∏Ä Ï†úÎ™©Ïùò ÎßÅÌÅ¨Î•º ÌÉÄÍ≥† Îì§Ïñ¥Í∞ÄÎ≥¥Ïûê]
            post_today=s.get('https://hi.hana.hs.kr/SYSTEM_Community/Board/sunrisePost_board/sunrisePost.asp'+link_oneul)
            soup_today = bs(post_today.text, "html.parser")   #Ïö∞Ìé∏Î¨º Í≤åÏãúÌåê Í∏Ä ÌïòÎÇò Í∏ÅÏñ¥Ïò§Í∏∞
            geul_p = soup_today.find_all("p")
            geul_span = soup_today.find_all("span")  #Í±∞Í∏∞ÏÑú tag Ïù¥Ïö©Ìï¥ÏÑú ÌëúÏóê ÏûàÎäî 'Ïù¥Î¶Ñ'ÏΩîÎìúÎì§Îßå Ï≠â Í∞ÄÏ†∏Ïò¥ (Ïù¥ÎØ∏ listÌòïÏù∏ÎìØ)

            #ÎØ∏ÏàòÎ†πÏûê
            if mimi==1:
              post_todaymi=s.get('https://hi.hana.hs.kr/SYSTEM_Community/Board/sunrisePost_board/sunrisePost.asp'+link_oneulmi)
              soup_todaymi=bs(post_todaymi.text, "html.parser")
              geul_pmi=soup_todaymi.find_all("p")
              geul_spanmi = soup_todaymi.find_all("span")

            list_span = []
            for a in range(len(geul_span)):
              text_span = geul_span[a].get_text()   #Ïù¥Ï†ú beautifulsoup objectÎ•º textÌòïÏúºÎ°ú Î∞õÍ≥†, Í∞ÅÍ∞ÅÏùò object textÎ•º listÏóê ÎÑ£Ïûê
              list_span.append(text_span)
              #    print(list_span)

            list2_span = list_span[0:]      #ÏïûÏóê ÏÇ¨ÎûåÏù¥Î¶ÑÎßêÍ≥† Ïù¥ÏÉÅÌïúÍ±¥ ÏÇ≠Ï†ú -> Ïù¥Ï†ú 'Í≥µÎ∞±' ÎπºÍ≥†Îäî Î™®Îì† ÏÇ¨ÎûåÏùò "Ïù¥Î¶Ñ"Îßå get!
            print(list2_span)

            if mimi==1:
              list_spanmi = []
              for a in range(len(geul_spanmi)):
                text_spanmi = geul_spanmi[a].get_text()
                list_spanmi.append(text_spanmi)

              list2_spanmi = list_spanmi[0:]
              #print(list2_spanmi)


  #----------
            if mimi ==1:
              list2_span_sum = list2_span + list2_spanmi  #Ìï¥ÎãπÎÇ†ÏßúÏùò 'ÏàòÎ†πÏûê' Î™©Î°ùÍ≥º 'ÎØ∏ÏàòÎ†πÏûê' Î™©Î°ùÏùÑ ‚Üí Ìïú Î¶¨Ïä§Ìä∏Ïóê Ìï®Íªò!
              #print(list2_span_sum)
            else:
              list2_span_sum = list2_span                


            yoomoo=0


            for a in list2_span_sum:
              if your_name in a:
                yoomoo = 1       #ÌÉùÎ∞∞Ï£ºÎ¨∏ÏûêÎ™©Î°ù Ï§ë Ïù¥Î¶ÑÏù¥ Ìè¨Ìï®Îêú factorÍ∞Ä ÏûàÎäî Í≤ΩÏö∞
                break

            if yoomoo == 1:
              m=Message(event).set_text("%s(Ïò§Îäò): üì¶ÌÉùÎ∞∞‚úâÔ∏èÍ∞Ä ÏôÄ ÏûàÏäµÎãàÎã§! ÏÉùÌôúÍ¥Ä ÏÇ¨Î¨¥Ïã§ÏóêÏÑú Î≥¥Í¥Ä Ï§ëÏù¥Îãà Îπ®Î¶¨ Í∞ÄÏ†∏Í∞ÄÏÑ∏Ïöî :)" %(nalza_today))\
              .add_quick_reply('Ï≤òÏùåÏúºÎ°ú')
              self.send_message(m)
            else:
              m=Message(event).set_text("%s(Ïò§Îäò): ÏÉùÌôúÍ¥Ä ÏÇ¨Î¨¥Ïã§Ïóê Î≥¥Í¥Ä Ï§ëÏù∏ ÌÉùÎ∞∞Í∞Ä ‚ùåÏóÜÏäµÎãàÎã§‚ùå!" %(nalza_today))\
              .add_quick_reply('Ï≤òÏùåÏúºÎ°ú')
              self.send_message(m)
      






###########



    elif (message=='Îã§Î•∏ ÎÇ†Ïßú'):
      self.send_message("ÌôïÏù∏ÌïòÎ†§Îäî ÎÇ†ÏßúÎ•º ÏûÖÎ†•Ìï¥Ï£ºÏÑ∏Ïöî!(Ïò§Îäò ÎÇ†ÏßúÏóêÏÑú ÏïΩ 7Ïùº Ï†ÑÍπåÏßÄ Í∞ÄÎä•)\n(ex) 11Ïõî 6Ïùº: '11.6'Î°ú ÏûÖÎ†•")
      




###########


    elif (len(message)>=3 and len(message)<=5 and ('.' in message)):

      data=self.get_user_data()
      data.setdefault('yourname','blank')

      if (data['yourname']=='blank'):

        self.send_message("ÌÉùÎ∞∞ ÌôïÏù∏ Í∏∞Îä•ÏùÑ Ïù¥Ïö©ÌïòÎ†§Î©¥ Î®ºÏ†Ä Ï†úÍ≤å Ïù¥Î¶ÑÏùÑ ÏïåÎ†§Ï£ºÏÖîÏïº Ìï¥Ïöî! Í∏∞Ìò∏ '@' Îí§Ïóê Ïù¥Î¶ÑÏùÑ Ï†ÅÏñ¥ Ï£ºÏãúÍ≤†Ïñ¥Ïöî? Ï≤òÏùåÏóêÎßå Ìïú Î≤à ÏûÖÎ†•ÌïòÎ©¥ Ï†ÄÏû•ÎêòÎãà, Îß§Î≤à ÏÉàÎ°ú ÏïåÎ†§Ï£ºÏã§ ÌïÑÏöîÎäî ÏóÜÏñ¥Ïöî! ÏïÑÎûòÎäî ÏûÖÎ†• ÏòàÏãúÏûÖÎãàÎã§.")
        self.send_message("@ÌïòÎÇòÎ¥á")

      else:

        your_name=data['yourname']

        import requests
        from bs4 import BeautifulSoup as bs
        from datetime import datetime

        with requests.Session() as s:
          LOGIN_INFO = {
              'login_id': 'hanabot',
              'login_pw': 'gkskqht2019*'
          }

          login_req = s.post('https://hi.hana.hs.kr/proc/login_proc.asp', data=LOGIN_INFO)

          #[ÎÇ†ÏßúÏóê Ìï¥ÎãπÌïòÎäî Í≤åÏãúÎ¨º Ï∞æÍ∏∞]
          moklok_one=s.get('https://hi.hana.hs.kr/SYSTEM_Community/Board/sunrisePost_board/sunrisePost.asp')
          soup=bs(moklok_one.text, "html.parser") #Ïö∞Ìé∏Î¨º Í≤åÏãúÌåê Í∏ÅÏñ¥Ïò§Í∏∞
          geul_a = soup.find_all("a")
          list_a = []
          for b in range(len(geul_a)):
            text_a = geul_a[b]###############################################################################
            list_a.append(text_a)
          list2_a = list_a[23:-15]   #ÎÇ†Ïßú Ï†ÅÌòÄÏûàÎäî Ï†úÎ™©Îì§Îßå Îã§ Îî∞Ïò¥!! (Ï†úÏùº ÌïµÏã¨ 1)

          #print(list2_a)#############################################

          #[Ïù¥Ï†ú Í∑∏ ÎÇ†ÏßúÏóê ÎßûÎäî ÎßÅÌÅ¨Î•º Ï∞æÏïÑÎ≥¥Ïûê]
          link_li=[]
          for a in soup.find_all('a', href=True):
            link=a['href']
            link_li.append(link)
          link2=link_li[23:-15]      #Í∞Å Ï†úÎ™©Ïóê Ï†ÅÌòÄÏûàÎäî ÎßÅÌÅ¨Î•º Îã§ Îî∞Ïò¥ (Ï†úÏùº ÌïµÏã¨ 2)
          #print(link2)

          #[Ï¥àÍ∏∞ ÏÑ§Ï†ï]
          tooold=1  #1Ïù¥Î©¥ ÌéòÏù¥ÏßÄ ÎÑòÏñ¥Í∞ÄÏÑú or ÏïÑÏßÅ ÏóÖÎéÉ ÏïàÎèºÏÑú Î™ªÏ∞æÏùå / 0 ÎêòÎ©¥ Ï∞æÏùÑ Ïàò ÏûàÏñ¥!
          mimi=0   #ÎØ∏ÏàòÎ†πÏûê Í≤åÏãúÍ∏ÄÎèÑ ÏûàÎã§Î©¥ Ìè¨Ìï®ÏãúÏºúÏïºÌï®

          date_theday = message #'1.3'  #Ïó¨Í∏∞!!! ÎÇ†Ïßú ÏûÖÎ†•Î∞õÏïÑÏïº!!!
          split_date_theday=date_theday.split(".")[0:]
          nalza_today=('%sÏõî¬†%sÏùº' %(split_date_theday[0], split_date_theday[1]))

          print (nalza_today)
          print(type(list2_a[0].text))
          for a in range(len(list2_a)):
            print(list2_a[a].text)
            if (nalza_today in list2_a[a].text):
              tooold=0
              if ('ÎØ∏' in list2_a[a]):
                mimi=1
                link_oneulmi=link2[a]
              link_oneul=link2[a]
              break

          if (tooold==1):
            from datetime import datetime
            from pytz import timezone
            today=datetime.now(timezone('Asia/Seoul')).date() #Ïù¥Í±∞ pytz Ìï¥ÏïºÌï†ÎìØ!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!1
            mm=str(today.month)
            dd=str(today.day)
            today_=('%sÏõî¬†%sÏùº' %(mm,dd))
            if (nalza_today==today_):
              m=Message(event).set_text('ÏïÑÏßÅ ÌÉùÎ∞∞ ÏàòÎ†πÏûê Î™©Î°ùÏù¥ ÏóÖÎç∞Ïù¥Ìä∏ÎêòÏßÄ ÏïäÏïòÏäµÎãàÎã§.\nÏ°∞Í∏àÎßå Í∏∞Îã§Î†§Ï£ºÏÑ∏Ïöî!\n(Ï£ºÎ°ú ÎãπÏùº ÌÉùÎ∞∞Îäî Ïò§ÌõÑ 4~5ÏãúÏØ§ ÏóÖÎç∞Ïù¥Ìä∏)')\
              .add_quick_reply("Ï≤òÏùåÏúºÎ°ú")
              self.send_message(m)

            else: 
              m=Message(event).set_text("ÎÑàÎ¨¥ Ïò§ÎûòÎêòÏñ¥ ÌôïÏù∏Ìï† Ïàò ÏóÜÏäµÎãàÎã§ „Ö†„Ö†")\
              .add_quick_reply("Ï≤òÏùåÏúºÎ°ú")
              self.send_message(m)

          else:
            #[Ïò§Îäò ÎÇ†Ïßú Í≤åÏãúÍ∏Ä Ï†úÎ™©Ïùò ÎßÅÌÅ¨Î•º ÌÉÄÍ≥† Îì§Ïñ¥Í∞ÄÎ≥¥Ïûê]
            post_today=s.get('https://hi.hana.hs.kr/SYSTEM_Community/Board/sunrisePost_board/sunrisePost.asp'+link_oneul)
            soup_today = bs(post_today.text, "html.parser")   #Ïö∞Ìé∏Î¨º Í≤åÏãúÌåê Í∏Ä ÌïòÎÇò Í∏ÅÏñ¥Ïò§Í∏∞
            geul_p = soup_today.find_all("p")
            geul_span = soup_today.find_all("span")  #Í±∞Í∏∞ÏÑú tag Ïù¥Ïö©Ìï¥ÏÑú ÌëúÏóê ÏûàÎäî 'Ïù¥Î¶Ñ'ÏΩîÎìúÎì§Îßå Ï≠â Í∞ÄÏ†∏Ïò¥ (Ïù¥ÎØ∏ listÌòïÏù∏ÎìØ)

            #ÎØ∏ÏàòÎ†πÏûê
            if mimi==1:
              post_todaymi=s.get('https://hi.hana.hs.kr/SYSTEM_Community/Board/sunrisePost_board/sunrisePost.asp'+link_oneulmi)
              soup_todaymi=bs(post_todaymi.text, "html.parser")
              geul_pmi=soup_todaymi.find_all("p")
              geul_spanmi = soup_todaymi.find_all("span")

            list_span = []
            for a in range(len(geul_span)):
              text_span = geul_span[a].get_text()   #Ïù¥Ï†ú beautifulsoup objectÎ•º textÌòïÏúºÎ°ú Î∞õÍ≥†, Í∞ÅÍ∞ÅÏùò object textÎ•º listÏóê ÎÑ£Ïûê
              list_span.append(text_span)
              #    print(list_span)

            list2_span = list_span[0:]      #ÏïûÏóê ÏÇ¨ÎûåÏù¥Î¶ÑÎßêÍ≥† Ïù¥ÏÉÅÌïúÍ±¥ ÏÇ≠Ï†ú -> Ïù¥Ï†ú 'Í≥µÎ∞±' ÎπºÍ≥†Îäî Î™®Îì† ÏÇ¨ÎûåÏùò "Ïù¥Î¶Ñ"Îßå get!
            print(list2_span)

            if mimi==1:
              list_spanmi = []
              for a in range(len(geul_spanmi)):
                text_spanmi = geul_spanmi[a].get_text()
                list_spanmi.append(text_spanmi)

              list2_spanmi = list_spanmi[0:]
              #print(list2_spanmi)


  #----------
            if mimi ==1:
              list2_span_sum = list2_span + list2_spanmi  #Ìï¥ÎãπÎÇ†ÏßúÏùò 'ÏàòÎ†πÏûê' Î™©Î°ùÍ≥º 'ÎØ∏ÏàòÎ†πÏûê' Î™©Î°ùÏùÑ ‚Üí Ìïú Î¶¨Ïä§Ìä∏Ïóê Ìï®Íªò!
              #print(list2_span_sum)
            else:
              list2_span_sum = list2_span                


            yoomoo=0


            for a in list2_span_sum:
              if your_name in a:
                yoomoo = 1       #ÌÉùÎ∞∞Ï£ºÎ¨∏ÏûêÎ™©Î°ù Ï§ë Ïù¥Î¶ÑÏù¥ Ìè¨Ìï®Îêú factorÍ∞Ä ÏûàÎäî Í≤ΩÏö∞
                break

            if yoomoo == 1:
              m=Message(event).set_text("%s: üì¶ÌÉùÎ∞∞‚úâÔ∏èÍ∞Ä ÏôÄ ÏûàÏäµÎãàÎã§! ÏÉùÌôúÍ¥Ä ÏÇ¨Î¨¥Ïã§ÏóêÏÑú Î≥¥Í¥Ä Ï§ëÏù¥Îãà Îπ®Î¶¨ Í∞ÄÏ†∏Í∞ÄÏÑ∏Ïöî :)" %(nalza_today))\
              .add_quick_reply('Ï≤òÏùåÏúºÎ°ú')
              self.send_message(m)
              

            else:
              m=Message(event).set_text("%s: ÏÉùÌôúÍ¥Ä ÏÇ¨Î¨¥Ïã§Ïóê Î≥¥Í¥Ä Ï§ëÏù∏ ÌÉùÎ∞∞Í∞Ä ‚ùåÏóÜÏäµÎãàÎã§‚ùå!" %(nalza_today))\
              .add_quick_reply('Ï≤òÏùåÏúºÎ°ú')
              self.send_message(m)
              




          ##########################################################################################################################




    elif (message=='ÌÉùÎ∞∞'):

      m=Message(event).set_text("Ïñ¥Îäê ÎÇ†ÏßúÏùò ÌÉùÎ∞∞ ÌôïÏù∏ÏùÑ ÎèÑÏôÄÎìúÎ¶¥ÍπåÏöî?")\
      .add_quick_reply("Ïò§Îäò")\
      .add_quick_reply("Îã§Î•∏ ÎÇ†Ïßú")\
      .add_quick_reply("Ïù¥Î¶Ñ Í¥ÄÎ¶¨")
      self.send_message(m)

    elif (message=='Ïù¥Î¶Ñ Í¥ÄÎ¶¨'):

      m=Message(event).set_text("Ïù¥Î¶ÑÍ≥º Í¥ÄÎ†®Ìï¥ÏÑú Ïñ¥Îñ§ ÏûëÏóÖÏùÑ ÌïòÍ≥† Ïã∂ÏúºÏã†Í∞ÄÏöî?")\
      .add_quick_reply("Ïù¥Î¶Ñ ÏàòÏ†ï")\
      .add_quick_reply("Ïù¥Î¶Ñ ÏÇ≠Ï†ú")
      self.send_message(m)


    elif (message=='Ïù¥Î¶Ñ ÏàòÏ†ï'):

      self.send_message("Ïù¥Î¶ÑÏùÑ ÏàòÏ†ïÌïòÍ≥† Ïã∂ÏúºÏãúÍµ∞Ïöî! ÏßÄÍ∏à ÏûÖÎ†•Ìï¥Ï£ºÏãúÎäî Ïù¥Î¶ÑÏùÄ Ï†úÍ∞Ä Í∏∞ÏñµÌï¥Îëò ÌÖåÎãà, Îß§Î≤à ÏÉàÎ°ú ÏïåÎ†§Ï£ºÏã§ ÌïÑÏöîÎäî ÏóÜÎãµÎãàÎã§.")
      self.send_message("ÏõêÌïòÏãúÎ©¥ Ïñ∏Ï†úÎì† Ï†ïÎ≥¥Î•º ÏÇ≠Ï†úÌï† Ïàò ÏûàÏñ¥Ïöî! ('ÌÉùÎ∞∞'->'Ïù¥Î¶Ñ Í¥ÄÎ¶¨'->'Ïù¥Î¶Ñ ÏÇ≠Ï†ú'Î•º Ï∞®Î°ÄÎ°ú ÎàåÎü¨ Ï£ºÏãúÎ©¥ ÎèºÏöî „Öé„Öé)")
      self.send_message("Í∏∞Ìò∏ '@' Îí§Ïóê Ïù¥Î¶ÑÏùÑ Ï†ÅÏñ¥ Ï£ºÏãúÍ≤†Ïñ¥Ïöî? ÏïÑÎûòÎäî ÏûÖÎ†• ÏòàÏãúÏûÖÎãàÎã§.")
      self.send_message("@ÌïòÎÇòÎ¥á")



    elif (message.startswith('@')):
      data=self.get_user_data()
      data['yourname']=message[1:].strip()
      self.set_user_data(data)
      self.send_message("ÎÑ§, ÏûÖÎ†•ÎêòÏóàÏäµÎãàÎã§! Î∞òÍ∞ëÏäµÎãàÎã§,"+data['yourname']+'Îãò!')
      self.send_message("Ï†ïÎ≥¥ ÏÇ≠Ï†úÎ•º ÏõêÌïòÏãúÎ©¥, 'ÌÉùÎ∞∞'->'Ïù¥Î¶Ñ Í¥ÄÎ¶¨'->'Ïù¥Î¶Ñ ÏÇ≠Ï†ú' Î•º ÎàåÎü¨ Ïñ∏Ï†úÎì†ÏßÄ ÏÇ≠Ï†úÌï† Ïàò ÏûàÎãµÎãàÎã§.")
      m=Message(event).set_text("Ïù¥Î¶ÑÏùÑ ÏàòÏ†ïÌïòÍ≥† Ïã∂ÏúºÏãúÎ©¥, Î∞©Í∏àÍ≥º Í∞ôÏùÄ Î∞©ÏãùÏúºÎ°ú Îã§Ïãú ÏûÖÎ†•Ìï¥Ï£ºÏãúÎ©¥ Îê©ÎãàÎã§! „Öé„Öé\n('@ÏΩîÏΩîÌåú'Ï≤òÎüº Í≥®Î±ÖÏù¥ Îí§Ïóê ÏûÖÎ†•)")\
      .add_quick_reply("ÌÉùÎ∞∞")\
      .add_quick_reply("Ï≤òÏùåÏúºÎ°ú")
      self.send_message(m)

    elif (message=="Ïù¥Î¶Ñ ÏÇ≠Ï†ú"):
      data=self.get_user_data()
      data.setdefault('yourname','blank')
      data['yourname']='blank'
      self.set_user_data(data)
      m=Message(event).set_text("ÎÑ§, Ïù¥Î¶ÑÍ≥º Í¥ÄÎ†®Îêú Ï†ïÎ≥¥Î•º ÏÇ≠Ï†úÌïòÏòÄÏäµÎãàÎã§! „Öé„Öé")\
      .add_quick_reply("Ï≤òÏùåÏúºÎ°ú")
      self.send_message(m)








###########################

    elif(message=='ÌîºÎìúÎ∞±'):
      m=Message(event).set_text("ÌîºÎìúÎ∞±ÏùÑ Î≥¥ÎÇ¥ Ï£ºÏãúÎ†§Î©¥, Îß® ÏïûÏóê (ÌîºÎìúÎ∞±) Ïù¥ÎùºÍ≥† Í¥ÑÌò∏ Ìè¨Ìï®Ìï¥ÏÑú ÌëúÏãúÌï¥ Ï£ºÏã† ÌõÑ ÎÇ¥Ïö©ÏùÑ Ïç® Ï£ºÏÑ∏Ïöî!\nÏÉàÎ°ú Ï∂îÍ∞ÄÎêòÏóàÏúºÎ©¥ ÌïòÎäî Í∏∞Îä•Ïóê ÎåÄÌïú ÎÇ¥Ïö©ÎèÑ Ï¢ãÏäµÎãàÎã§ „Öé„Öé(Îã§Îßå Í∞úÎ∞úÏûêÏùò Îä•Î†•Ïùò ÌïúÍ≥ÑÎ°ú Ïù∏Ìï¥ Î∞òÏòÅÏù¥ Îê† ÏàòÎèÑ ÏûàÍ≥† ÏïÑÎãê ÏàòÎèÑ ÏûàÎãµÎãàÎã§üòÖ)")\
      .add_quick_reply("Ï≤òÏùåÏúºÎ°ú")
      self.send_message(m)

    elif(message.strip().startswith("(ÌîºÎìúÎ∞±)")):
      p_data=self.get_project_data()
      p_data.setdefault('feedback',list())
      p_data['feedback'].append(message)
      self.set_project_data(p_data)
      m=Message(event).set_text("ÌîºÎìúÎ∞±Ïù¥ Ï†ÑÏÜ°ÎêòÏóàÏäµÎãàÎã§! Ï±óÎ¥á Î∞úÏ†ÑÏóê ÎèÑÏõÄÏùÑ Ï£ºÏÖîÏÑú Í∞êÏÇ¨Ìï©ÎãàÎã§üòä")\
      .add_quick_reply("Ï≤òÏùåÏúºÎ°ú")
      self.send_message(m)

    elif(message=="Hjr<9$b}2w|dUWS+"):
      p_data=self.get_project_data()
      li=p_data['feedback']
      for a in li:
        self.send_message(a)



    else:
      self.send_message("Ïïó, Ï£ÑÏÜ°Ìï¥Ïöî„Ö†„Ö† Î™ª ÏïåÏïÑÎì§ÏóàÏñ¥Ïöî „Ö†„Ö†")
      m=Message(event).set_text("ÏïÑÎûò ÌÇ§ÏõåÎìú Ï§ë ÌïòÎÇòÎ•º ÎàåÎü¨ Ï£ºÏÑ∏Ïöî „Öé„Öé")\
      .add_quick_reply('Í∏âÏãù')\
      .add_quick_reply('ÍµêÍ≥ºÍµêÏã§')\
      .add_quick_reply('ÎèÑÏÑúÍ¥Ä')\
      .add_quick_reply('ÌÉùÎ∞∞')\
      .add_quick_reply('ÌîºÎìúÎ∞±')
      self.send_message(m)

    return



    """Represent a Bot logic which interacts with a user.

    BaseBot superclass have methods belows:

    * Send message
      * self.send_message(message, chat_id=None, channel=None)
    * Data Storage
      * self.set_project_data(data)
      * self.get_project_data()
      * self.set_user_data(data, user_id=None, channel=None)
      * self.get_user_data(user_id=None, channel=None)

    When you omit user_id and channel argument, it regarded as a user
    who triggered a bot.
    """

    """def handle_message(self, event, context):
        Handle a message received

        event is a dict and contains trigger info.

        {
           "trigger": "webhook",
           "channel": "<name>",
           "sender": {
              "id": "<chat_id>",
              "name": "<nickname>"
           },
           "content": "<message content>",
           "raw_data": <unmodified data itself webhook received>
        }
        
        self.send_message('Echo: {}'.format(event['content']))"""




"""id: hanabot
password:gkskqht2019*"""

